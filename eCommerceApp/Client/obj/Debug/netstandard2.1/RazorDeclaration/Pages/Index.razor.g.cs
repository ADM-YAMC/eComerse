// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace eCommerceApp.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using eCommerceApp.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using eCommerceApp.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using eCommerceApp.Client.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\_Imports.razor"
using eCommerceApp.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\Pages\Index.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 177 "C:\Users\Alex-carreras\Desktop\eCommerceApp\eCommerceApp\Client\Pages\Index.razor"
       
    OrderDatailsPreview orderDatailsPreview = new OrderDatailsPreview();

    List<OrderDetails> orderDetails = new List<OrderDetails>();
    RadzenDataGrid<OrderDetails> grid;
    RadzenDataGrid<Orders> gridOrders;
    OrderDetails order = new OrderDetails();
    Orders orders = new Orders();
    List<Customers> customersList;
    List<Orders> ordersList;
    Random r = new Random();
    string code;
    int IdCustomer;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            customersList = await http.GetFromJsonAsync<List<Customers>>($"api/Customers");
            ordersList = await http.GetFromJsonAsync<List<Orders>>($"api/Orders");
        }
        catch (Exception)
        {

        }
    }
    async Task AddList()
    {
        if (code == null)
        {
            code = r.Next(1000, 10000).ToString();
        }
        try
        {
            order = new OrderDetails()
            {
                OrderNumber = code,
                NameProduct = orderDatailsPreview.NamePoduct,
                ProductQty = orderDatailsPreview.Cuantity,
                TotalSales = orderDatailsPreview.Cuantity * orderDatailsPreview.Price

            };
            orderDetails.Add(order);
            await grid.Reload();
        }
        catch (Exception)
        {
        }
    }

    async Task PostOrder()
    {
        int? PQty = 0;
        double? TO = 0;
        foreach (var item in orderDetails)
        {
            PQty += item.ProductQty;
            TO += item.TotalSales;
        }

        orders = new Orders()
        {
            OrderNumber = code,
            ProductQty = (int)PQty,
            TotalOrder = Convert.ToInt32(TO),
            CustomerId = IdCustomer
        };

        string json = JsonConvert.SerializeObject(orders);
        StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        var responses = await http.PostAsync("api/Orders", httpContent);
        var respuesta = await responses.Content.ReadFromJsonAsync<OrdersResponse>();
        if (respuesta.ok)
        {
            await PostOrderDetails();
            await Js.InvokeAsync<object>("Estado", "Exito", $"{respuesta.msj}", "success");
            Limpiar();
        }
        else
        {
            await Js.InvokeAsync<object>("Estado", "Oops...", $"{respuesta.msj}", "error");
        }
    }

    async Task PostOrderDetails()
    {
        string json = JsonConvert.SerializeObject(orderDetails);
        StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        var responses = await http.PostAsync("api/OrderDetails", httpContent);
    }

    async Task OnInputChange(ChangeEventArgs change)
    {
        if (change.Value.ToString().Length > 3)
        {
            var response = await http.GetFromJsonAsync<Products>($"api/Products/code/{change.Value}");
            orderDatailsPreview.Price = response.Price;
            orderDatailsPreview.Stock = response.Stock;
            orderDatailsPreview.NamePoduct = response.Name;
        }
    }

    async Task DeleteProductTable(OrderDetails orderD)
    {
        orderDetails.Remove(orderD);
        await grid.Reload();
    }


    void OnChange(object value)
    {
        IdCustomer = (int)value;
        Console.WriteLine(value);

    }
    void Limpiar()
    {
        orderDetails = new List<OrderDetails>();
        code = null;
        orderDatailsPreview = new OrderDatailsPreview();

    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime Js { get; set; }
    }
}
#pragma warning restore 1591
